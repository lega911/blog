::id 4bfb3c691d41c846bc00002b
::date 2010-01-30
::title Написание регексов (Regexp), примеры
::tags python, regexp, инструкция
::body
!1. Выбор опорного текста
Для начала нужно определить опорный текст, который лежит рядом с целевым и который не меняется.

**Например:** нужно получить ссылку и текст ссылки из html страницы:
**<a href="**//http:/!^/google.com//**">**//this google//**</a>**
жирным выделен опорный текст, вписываем его в шаблон: <a href="!">!</a>, вместо восклицательных знаков нужно вписать шаблон целевого текста. Опорный текст можно тоже описывать шаблонами, например если неизвестно сколько пробелов между "<a" и "href" - можно использовать шаблон "\s+?" который означает что тут должны быть символы разделители, 1 или несколько, и выражение будет таким: <a\s+?href="!">!</a>
!2. Выбор целевого текста (тот который нужно получить)
в данном случае можно по простому, выбрать весь текст: "(.+?)", "." означает любой символ, "+" - символов один или несколько, "?" - означает что текст не жадный. Подставляем в наше выражение: "<a href="(.+?)">(.+?)</a>"
**Пример:**
[[# coding: utf-8
import re

text = '<body> <a href="http://google.com">this google</a> <br/> <a href="http://yandex.ru">yandex</a> </body> '

d = re.findall(r'<a href="(.+?)">(.+?)</a>', text)
print d]]
**Результат:**
[[ [('http://google.com', 'this google'), ('http://yandex.ru', 'yandex')] ]]

Если мы хотим что-б 1 группа (ссылка) начиналась с текста "http:/!^/", то так и пишем: "(http:/ /.+?)"

! (.+?) и (.*?) - любой текст
Что-бы выбрать "любой текст", нужно что-б этот паттерн был окружен текстом с обоих сторон, и было видно от куда до куда выбирать. По умолчанию этот паттерн выбирает любой текст кроме символа переноса строки, что-бы символ переноса строки подчинялся этому паттерну нужно использовать флаг DOTALL.
**Отличие (.+?) от (.*?)**, "+" указывает на то что количество символов должно быть 1 или более, "*" - 0 или более. Например если попадет такой текст //'... <a href="">google</a>'//, то он не попадет в результат, т.к. у него href пустой, а в регексе условие ".+?" = 1 или более.
см [/page/56 паттерны regexp]

!Примеры и заметки
[/page/63 regexp методы в python]
[/page/56 паттерны regexp]
[/page/9 Рендер вики синтаксиса на регексах]
[/page/17 Подмена функций на регексах]

::html
<h3>1. Выбор опорного текста</h3>Для начала нужно определить опорный текст, который лежит рядом с целевым и который не меняется.<br />
<br />
<b>Например:</b> нужно получить ссылку и текст ссылки из html страницы:<br />
<b>&lt;a href="</b><i>http://google.com</i><b>"&gt;</b><i>this google</i><b>&lt;/a&gt;</b><br />
жирным выделен опорный текст, вписываем его в шаблон: &lt;a href="!"&gt;!&lt;/a&gt;, вместо восклицательных знаков нужно вписать шаблон целевого текста. Опорный текст можно тоже описывать шаблонами, например если неизвестно сколько пробелов между "&lt;a" и "href" - можно использовать шаблон "\s+?" который означает что тут должны быть символы разделители, 1 или несколько, и выражение будет таким: &lt;a\s+?href="!"&gt;!&lt;/a&gt;<h3>2. Выбор целевого текста (тот который нужно получить)</h3>в данном случае можно по простому, выбрать весь текст: "(.+?)", "." означает любой символ, "+" - символов один или несколько, "?" - означает что текст не жадный. Подставляем в наше выражение: "&lt;a href="(.+?)"&gt;(.+?)&lt;/a&gt;"<br />
<b>Пример:</b><br />
<div class="codebox"><div class="highlight"><pre><span class="c"># coding: utf-8</span>
<span class="kn">import</span> <span class="nn">re</span>

<span class="n">text</span> <span class="o">=</span> <span class="s">&#39;&lt;body&gt; &lt;a href=&quot;http://google.com&quot;&gt;this google&lt;/a&gt; &lt;br/&gt; &lt;a href=&quot;http://yandex.ru&quot;&gt;yandex&lt;/a&gt; &lt;/body&gt; &#39;</span>

<span class="n">d</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">findall</span><span class="p">(</span><span class="s">r&#39;&lt;a href=&quot;(.+?)&quot;&gt;(.+?)&lt;/a&gt;&#39;</span><span class="p">,</span> <span class="n">text</span><span class="p">)</span>
<span class="k">print</span> <span class="n">d</span>
</pre></div>
</div><br />
<b>Результат:</b><br />
<div class="codebox"><div class="highlight"><pre> <span class="p">[(</span><span class="s">&#39;http://google.com&#39;</span><span class="p">,</span> <span class="s">&#39;this google&#39;</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;http://yandex.ru&#39;</span><span class="p">,</span> <span class="s">&#39;yandex&#39;</span><span class="p">)]</span> 
</pre></div>
</div><br />
<br />
Если мы хотим что-б 1 группа (ссылка) начиналась с текста "http://", то так и пишем: "(http:/ /.+?)"<br />
<h3> (.+?) и (.*?) - любой текст</h3>Что-бы выбрать "любой текст", нужно что-б этот паттерн был окружен текстом с обоих сторон, и было видно от куда до куда выбирать. По умолчанию этот паттерн выбирает любой текст кроме символа переноса строки, что-бы символ переноса строки подчинялся этому паттерну нужно использовать флаг DOTALL.<br />
<b>Отличие (.+?) от (.*?)</b>, "+" указывает на то что количество символов должно быть 1 или более, "*" - 0 или более. Например если попадет такой текст <i>'... &lt;a href=""&gt;google&lt;/a&gt;'</i>, то он не попадет в результат, т.к. у него href пустой, а в регексе условие ".+?" = 1 или более.<br />
см <a href="/page/56">паттерны regexp</a><br />
<h3>Примеры и заметки</h3><a href="/page/63">regexp методы в python</a><br />
<a href="/page/56">паттерны regexp</a><br />
<a href="/page/9">Рендер вики синтаксиса на регексах</a><br />
<a href="/page/17">Подмена функций на регексах</a><br />
