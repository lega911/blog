::id 4bfb3c691d41c846bc000050
::date 2010-02-09
::title Python, базовые функции для списков, итераторов
::tags python, sorted, reversed
::body
В данной статье описал основные ф-ии, из стандартного набора python 2.6, для управления списками, итераторами, словарями и пр.


!max, min
Получить максимальное, минимальное значение
[[print max( [1,2,3] )
# 3
print min( [1,2,3] )
# 1]]можно задать ключ, пример как получить самую длинную строку
[[print max( [ 'vi','linux','win' ], key=lambda x:len(x) )
# linux]]

!sum
Сумма списка
[[print sum( [1,2,3] )
# 6]]
[[print sum([ [1,2], [3,4], [5,6] ], [])
# [1, 2, 3, 4, 5, 6] ]]

!all, any
Логическая ф-ия, **all** возвращает True если все элементы списка равны True
**any** возвращает True если есть хоть один элемент списка равный True
[[print all( [True,False,True] )
# False
print any( [True,False,True] )
# True]]

!zip
Слияние 2-х списков
[[c = ['a','b','c']
d = [1,2,3]
print zip(c,d)
# [('a', 1), ('b', 2), ('c', 3)] ]]

!dict
Получить словарь из списка
[[d = [('a', 1), ('b', 2), ('c', 3)]
print dict(d)
# {'a': 1, 'c': 3, 'b': 2} ]]

!map
Обработать все элементы списка
[[d = [1,2,3]
print map(lambda x:x*2,d)
# [2, 4, 6] ]]
С несколькими параметрами:[[print map(lambda a,b,c:a+b+c, [1,2,3,4], [2,3,4,5], [3,4,5,6])
# [6, 9, 12, 15] ]]
Без указания обработчика, списки склеиваются[[print map(None, [1,2,3,4], [2,3,4,5], [3,4,5,6,10])
# [(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6), (None, None, 10)] ]]

!range
Получить список чисел, **range(старт, стоп, шаг)**
[[d = range(1,10,2)
print d
# [1, 3, 5, 7, 9] ]]**xrange** - аналогичная ф-ия, но возвращает итератор вместо списка


!reduce
Вычислить значение: reduce( lambda x, y: x+y, [ 1,2,3,4 ] ) = (((1+2)+3)+4)
[[d = [1, 2, 3]
print reduce(lambda x, y: x+y, d)
# 6]]

!enumerate
Пронумеровать список
[[print list( enumerate( ['a','b','c'] ) )
# [(0, 'a'), (1, 'b'), (2, 'c')] ]]возвращает итератор


!filter
Фильтровать список
[[print filter(lambda x:x%2, [1,2,3,4,5,6] )
# [1, 3, 5] ]]

!iter
Получить итератор: iter( fun(), stop )
[[a = 7
def f():
    global a
    a -= 1
    return a
print list( iter(f,2) )
# [6, 5, 4, 3] ]]

!list
[[list( xrange(5) )
# [0, 1, 2, 3, 4] ]]

!tuple
[[tuple( xrange(5) )
# (0, 1, 2, 3, 4) ]]

!next
Получить следующее значение из итератора
[[print iter('abcdef').next()
# a]]

!reversed
Реверс
[[print list( reversed('abcde') )
# ['e', 'd', 'c', 'b', 'a'] ]]

!set
множества
[[print set('abcdedc')
# set(['a', 'c', 'b', 'e', 'd'])]]

!sorted
Сортировка, можно задать ключ, ф-ию сравнения, реверс.
sorted( list [ ,cmp] [ ,key] [ ,reverse] )
[[print sorted('bca')
# ['a', 'b', 'c']
print sorted('bca',reverse=True)
# ['c', 'b', 'a']
print sorted( [ 'win','linux','vi' ], key=lambda x:len(x) )
# ['vi', 'win', 'linux']
print sorted( [ ['a',3], ['b',1], ['c',2] ], cmp=lambda a,b:cmp(a[1],b[1]) )
# [ ['b', 1], ['c', 2], ['a', 3] ] ]]

!slice
Срез листа
[[range(10)[slice(0,7,2)]
# [0, 2, 4, 6]
'abcdefghqwrtyuiop'[slice(0,10,2)]
# 'acegq']]

!tee
Клонирование итератора **tee( iterator [ ,n] )**, n - кол-во копий
[[a,b,c = tee( xrange(5), 3)
print list(a), list(b), list(c)
# [0, 1, 2, 3, 4] [0, 1, 2, 3, 4] [0, 1, 2, 3, 4] ]]

!chain
Слить итераторы **chain( *iters )**
[[chain('ABC', 'DEF')
# A B C D E F]]

!combinations
Получить комбинации от значений итератора
[[combinations('ABCD', 2)
# AB AC AD BC BD CD
combinations(range(4), 3)
# 012 013 023 123]]

::html
В данной статье описал основные ф-ии, из стандартного набора python 2.6, для управления списками, итераторами, словарями и пр.<br />
<br />
<h3>max, min</h3>Получить максимальное, минимальное значение<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">max</span><span class="p">(</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># 3</span>
<span class="k">print</span> <span class="nb">min</span><span class="p">(</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># 1</span>
</pre></div>
</div>можно задать ключ, пример как получить самую длинную строку<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">max</span><span class="p">(</span> <span class="p">[</span> <span class="s">&#39;vi&#39;</span><span class="p">,</span><span class="s">&#39;linux&#39;</span><span class="p">,</span><span class="s">&#39;win&#39;</span> <span class="p">],</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># linux</span>
</pre></div>
</div><br />
<h3>sum</h3>Сумма списка<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">sum</span><span class="p">(</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># 6</span>
</pre></div>
</div><br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">sum</span><span class="p">([</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span> <span class="p">],</span> <span class="p">[])</span>
<span class="c"># [1, 2, 3, 4, 5, 6] </span>
</pre></div>
</div><br />
<h3>all, any</h3>Логическая ф-ия, <b>all</b> возвращает True если все элементы списка равны True<br />
<b>any</b> возвращает True если есть хоть один элемент списка равный True<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">all</span><span class="p">(</span> <span class="p">[</span><span class="bp">True</span><span class="p">,</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># False</span>
<span class="k">print</span> <span class="nb">any</span><span class="p">(</span> <span class="p">[</span><span class="bp">True</span><span class="p">,</span><span class="bp">False</span><span class="p">,</span><span class="bp">True</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># True</span>
</pre></div>
</div><br />
<h3>zip</h3>Слияние 2-х списков<br />
<div class="codebox"><div class="highlight"><pre><span class="n">c</span> <span class="o">=</span> <span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span><span class="s">&#39;b&#39;</span><span class="p">,</span><span class="s">&#39;c&#39;</span><span class="p">]</span>
<span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="k">print</span> <span class="nb">zip</span><span class="p">(</span><span class="n">c</span><span class="p">,</span><span class="n">d</span><span class="p">)</span>
<span class="c"># [(&#39;a&#39;, 1), (&#39;b&#39;, 2), (&#39;c&#39;, 3)] </span>
</pre></div>
</div><br />
<h3>dict</h3>Получить словарь из списка<br />
<div class="codebox"><div class="highlight"><pre><span class="n">d</span> <span class="o">=</span> <span class="p">[(</span><span class="s">&#39;a&#39;</span><span class="p">,</span> <span class="mi">1</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;b&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">),</span> <span class="p">(</span><span class="s">&#39;c&#39;</span><span class="p">,</span> <span class="mi">3</span><span class="p">)]</span>
<span class="k">print</span> <span class="nb">dict</span><span class="p">(</span><span class="n">d</span><span class="p">)</span>
<span class="c"># {&#39;a&#39;: 1, &#39;c&#39;: 3, &#39;b&#39;: 2} </span>
</pre></div>
</div><br />
<h3>map</h3>Обработать все элементы списка<br />
<div class="codebox"><div class="highlight"><pre><span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">]</span>
<span class="k">print</span> <span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="n">d</span><span class="p">)</span>
<span class="c"># [2, 4, 6] </span>
</pre></div>
</div><br />
С несколькими параметрами:<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">map</span><span class="p">(</span><span class="k">lambda</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span><span class="p">:</span><span class="n">a</span><span class="o">+</span><span class="n">b</span><span class="o">+</span><span class="n">c</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">])</span>
<span class="c"># [6, 9, 12, 15] </span>
</pre></div>
</div><br />
Без указания обработчика, списки склеиваются<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">map</span><span class="p">(</span><span class="bp">None</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">],</span> <span class="p">[</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">],</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">10</span><span class="p">])</span>
<span class="c"># [(1, 2, 3), (2, 3, 4), (3, 4, 5), (4, 5, 6), (None, None, 10)] </span>
</pre></div>
</div><br />
<h3>range</h3>Получить список чисел, <b>range(старт, стоп, шаг)</b><br />
<div class="codebox"><div class="highlight"><pre><span class="n">d</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span>
<span class="k">print</span> <span class="n">d</span>
<span class="c"># [1, 3, 5, 7, 9] </span>
</pre></div>
</div><b>xrange</b> - аналогичная ф-ия, но возвращает итератор вместо списка<br />
<br />
<h3>reduce</h3>Вычислить значение: reduce( lambda x, y: x+y, [ 1,2,3,4 ] ) = (((1+2)+3)+4)<br />
<div class="codebox"><div class="highlight"><pre><span class="n">d</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">3</span><span class="p">]</span>
<span class="k">print</span> <span class="nb">reduce</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">:</span> <span class="n">x</span><span class="o">+</span><span class="n">y</span><span class="p">,</span> <span class="n">d</span><span class="p">)</span>
<span class="c"># 6</span>
</pre></div>
</div><br />
<h3>enumerate</h3>Пронумеровать список<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">list</span><span class="p">(</span> <span class="nb">enumerate</span><span class="p">(</span> <span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span><span class="s">&#39;b&#39;</span><span class="p">,</span><span class="s">&#39;c&#39;</span><span class="p">]</span> <span class="p">)</span> <span class="p">)</span>
<span class="c"># [(0, &#39;a&#39;), (1, &#39;b&#39;), (2, &#39;c&#39;)] </span>
</pre></div>
</div>возвращает итератор<br />
<br />
<h3>filter</h3>Фильтровать список<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">filter</span><span class="p">(</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="n">x</span><span class="o">%</span><span class="mi">2</span><span class="p">,</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span> <span class="p">)</span>
<span class="c"># [1, 3, 5] </span>
</pre></div>
</div><br />
<h3>iter</h3>Получить итератор: iter( fun(), stop )<br />
<div class="codebox"><div class="highlight"><pre><span class="n">a</span> <span class="o">=</span> <span class="mi">7</span>
<span class="k">def</span> <span class="nf">f</span><span class="p">():</span>
    <span class="k">global</span> <span class="n">a</span>
    <span class="n">a</span> <span class="o">-=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">a</span>
<span class="k">print</span> <span class="nb">list</span><span class="p">(</span> <span class="nb">iter</span><span class="p">(</span><span class="n">f</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># [6, 5, 4, 3] </span>
</pre></div>
</div><br />
<h3>list</h3><div class="codebox"><div class="highlight"><pre><span class="nb">list</span><span class="p">(</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># [0, 1, 2, 3, 4] </span>
</pre></div>
</div><br />
<h3>tuple</h3><div class="codebox"><div class="highlight"><pre><span class="nb">tuple</span><span class="p">(</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># (0, 1, 2, 3, 4) </span>
</pre></div>
</div><br />
<h3>next</h3>Получить следующее значение из итератора<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">iter</span><span class="p">(</span><span class="s">&#39;abcdef&#39;</span><span class="p">)</span><span class="o">.</span><span class="n">next</span><span class="p">()</span>
<span class="c"># a</span>
</pre></div>
</div><br />
<h3>reversed</h3>Реверс<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">list</span><span class="p">(</span> <span class="nb">reversed</span><span class="p">(</span><span class="s">&#39;abcde&#39;</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># [&#39;e&#39;, &#39;d&#39;, &#39;c&#39;, &#39;b&#39;, &#39;a&#39;] </span>
</pre></div>
</div><br />
<h3>set</h3>множества<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">set</span><span class="p">(</span><span class="s">&#39;abcdedc&#39;</span><span class="p">)</span>
<span class="c"># set([&#39;a&#39;, &#39;c&#39;, &#39;b&#39;, &#39;e&#39;, &#39;d&#39;])</span>
</pre></div>
</div><br />
<h3>sorted</h3>Сортировка, можно задать ключ, ф-ию сравнения, реверс.<br />
sorted( list [ ,cmp] [ ,key] [ ,reverse] )<br />
<div class="codebox"><div class="highlight"><pre><span class="k">print</span> <span class="nb">sorted</span><span class="p">(</span><span class="s">&#39;bca&#39;</span><span class="p">)</span>
<span class="c"># [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</span>
<span class="k">print</span> <span class="nb">sorted</span><span class="p">(</span><span class="s">&#39;bca&#39;</span><span class="p">,</span><span class="n">reverse</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
<span class="c"># [&#39;c&#39;, &#39;b&#39;, &#39;a&#39;]</span>
<span class="k">print</span> <span class="nb">sorted</span><span class="p">(</span> <span class="p">[</span> <span class="s">&#39;win&#39;</span><span class="p">,</span><span class="s">&#39;linux&#39;</span><span class="p">,</span><span class="s">&#39;vi&#39;</span> <span class="p">],</span> <span class="n">key</span><span class="o">=</span><span class="k">lambda</span> <span class="n">x</span><span class="p">:</span><span class="nb">len</span><span class="p">(</span><span class="n">x</span><span class="p">)</span> <span class="p">)</span>
<span class="c"># [&#39;vi&#39;, &#39;win&#39;, &#39;linux&#39;]</span>
<span class="k">print</span> <span class="nb">sorted</span><span class="p">(</span> <span class="p">[</span> <span class="p">[</span><span class="s">&#39;a&#39;</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="s">&#39;b&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="s">&#39;c&#39;</span><span class="p">,</span><span class="mi">2</span><span class="p">]</span> <span class="p">],</span> <span class="nb">cmp</span><span class="o">=</span><span class="k">lambda</span> <span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">:</span><span class="nb">cmp</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="n">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="p">)</span>
<span class="c"># [ [&#39;b&#39;, 1], [&#39;c&#39;, 2], [&#39;a&#39;, 3] ] </span>
</pre></div>
</div><br />
<h3>slice</h3>Срез листа<br />
<div class="codebox"><div class="highlight"><pre><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">)[</span><span class="nb">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">2</span><span class="p">)]</span>
<span class="c"># [0, 2, 4, 6]</span>
<span class="s">&#39;abcdefghqwrtyuiop&#39;</span><span class="p">[</span><span class="nb">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">2</span><span class="p">)]</span>
<span class="c"># &#39;acegq&#39;</span>
</pre></div>
</div><br />
<h3>tee</h3>Клонирование итератора <b>tee( iterator [ ,n] )</b>, n - кол-во копий<br />
<div class="codebox"><div class="highlight"><pre><span class="n">a</span><span class="p">,</span><span class="n">b</span><span class="p">,</span><span class="n">c</span> <span class="o">=</span> <span class="n">tee</span><span class="p">(</span> <span class="nb">xrange</span><span class="p">(</span><span class="mi">5</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>
<span class="k">print</span> <span class="nb">list</span><span class="p">(</span><span class="n">a</span><span class="p">),</span> <span class="nb">list</span><span class="p">(</span><span class="n">b</span><span class="p">),</span> <span class="nb">list</span><span class="p">(</span><span class="n">c</span><span class="p">)</span>
<span class="c"># [0, 1, 2, 3, 4] [0, 1, 2, 3, 4] [0, 1, 2, 3, 4] </span>
</pre></div>
</div><br />
<h3>chain</h3>Слить итераторы <b>chain( *iters )</b><br />
<div class="codebox"><div class="highlight"><pre><span class="n">chain</span><span class="p">(</span><span class="s">&#39;ABC&#39;</span><span class="p">,</span> <span class="s">&#39;DEF&#39;</span><span class="p">)</span>
<span class="c"># A B C D E F</span>
</pre></div>
</div><br />
<h3>combinations</h3>Получить комбинации от значений итератора<br />
<div class="codebox"><div class="highlight"><pre><span class="n">combinations</span><span class="p">(</span><span class="s">&#39;ABCD&#39;</span><span class="p">,</span> <span class="mi">2</span><span class="p">)</span>
<span class="c"># AB AC AD BC BD CD</span>
<span class="n">combinations</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">4</span><span class="p">),</span> <span class="mi">3</span><span class="p">)</span>
<span class="c"># 012 013 023 123</span>
</pre></div>
</div><br />
