::id 4bfb3c6b1d41c846bc0000d5
::date 2010-05-14
::title MongoDB базовые функции под python ( pymongo )
::tags python, mongodb
::body
**MongoDB** - документо-ориентированная система управления базами данных (СУБД) с открытым исходным кодом, не требующая описания схемы таблиц.

[[# coding: utf8

import pymongo

from pymongo import Connection
connection = Connection()

# Удалить БД, если она существует
connection.drop_database("test_database")

# Выбираем БД
db = connection.test_database
# либо: db = connection["test_database"]

# Удалить коллекцию
db.drop_collection('users')

# Добавление документов в колекцию 'users'
db.users.save( { 'name':'user 1', 'level':1 } )
db.users.save( { 'name':'user 2', 'level':2 } )
db.users.insert( { 'name':'user 3', 'level':3 } )

# Полное имя колекции
print db.users.full_name

# Получить все документы
for user in db.users.find():
    print user

# Выбрать конкретные атрибуты
users = db.users.find({},{ 'login':1, 'name':1 })

# Получить один документ по условию
user = db.users.find_one({'name':'user 1'})

# Получить/установить значение
print user['level']
user['level'] = 7

# Сохранить документ
db.users.save(user)

# Удалить документ
db.users.remove(user)

# Установить значение в документе
db.users.update({ 'name':'user 2' }, { "$set": { 'level':5 } })

# Кол-во документов
print 'Count',db.users.count()
print 'Count lvl=2',db.users.find({'level':2}).count()

# Сортировка
for user in db.users.find().sort('level'):
    print user
# в обратном порядке: .sort('level',pymongo.DESCENDING)
# Сортировка по нескольким атрибутам
    db.users.find({}).sort( [('status',1),('level',-1)] )

# Ограничение выборки, пропустить один документ и выбрать не более двух
for user in db.users.find().skip(1).limit(2):
    print user

# Условия
for user in db.users.find().where('this.name == "user 2" || this.level>3'):
    print user

# Выбрать неповторяющиеся записи
for user in db.users.distinct('level'):
    print user

# Поиск регулярным выражением
import re
regex = re.compile('^us', re.I | re.U) 
result = db.collection.find({ 'name':regex })
]]
::html
<b>MongoDB</b> - документо-ориентированная система управления базами данных (СУБД) с открытым исходным кодом, не требующая описания схемы таблиц.<br />
<br />
<div class="codebox"><div class="highlight"><pre><span class="c"># coding: utf8</span>

<span class="kn">import</span> <span class="nn">pymongo</span>

<span class="kn">from</span> <span class="nn">pymongo</span> <span class="kn">import</span> <span class="n">Connection</span>
<span class="n">connection</span> <span class="o">=</span> <span class="n">Connection</span><span class="p">()</span>

<span class="c"># Удалить БД, если она существует</span>
<span class="n">connection</span><span class="o">.</span><span class="n">drop_database</span><span class="p">(</span><span class="s">&quot;test_database&quot;</span><span class="p">)</span>

<span class="c"># Выбираем БД</span>
<span class="n">db</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="n">test_database</span>
<span class="c"># либо: db = connection[&quot;test_database&quot;]</span>

<span class="c"># Удалить коллекцию</span>
<span class="n">db</span><span class="o">.</span><span class="n">drop_collection</span><span class="p">(</span><span class="s">&#39;users&#39;</span><span class="p">)</span>

<span class="c"># Добавление документов в колекцию &#39;users&#39;</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">save</span><span class="p">(</span> <span class="p">{</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="s">&#39;user 1&#39;</span><span class="p">,</span> <span class="s">&#39;level&#39;</span><span class="p">:</span><span class="mi">1</span> <span class="p">}</span> <span class="p">)</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">save</span><span class="p">(</span> <span class="p">{</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="s">&#39;user 2&#39;</span><span class="p">,</span> <span class="s">&#39;level&#39;</span><span class="p">:</span><span class="mi">2</span> <span class="p">}</span> <span class="p">)</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span> <span class="p">{</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="s">&#39;user 3&#39;</span><span class="p">,</span> <span class="s">&#39;level&#39;</span><span class="p">:</span><span class="mi">3</span> <span class="p">}</span> <span class="p">)</span>

<span class="c"># Полное имя колекции</span>
<span class="k">print</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">full_name</span>

<span class="c"># Получить все документы</span>
<span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">():</span>
    <span class="k">print</span> <span class="n">user</span>

<span class="c"># Выбрать конкретные атрибуты</span>
<span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">({},{</span> <span class="s">&#39;login&#39;</span><span class="p">:</span><span class="mi">1</span><span class="p">,</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="mi">1</span> <span class="p">})</span>

<span class="c"># Получить один документ по условию</span>
<span class="n">user</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find_one</span><span class="p">({</span><span class="s">&#39;name&#39;</span><span class="p">:</span><span class="s">&#39;user 1&#39;</span><span class="p">})</span>

<span class="c"># Получить/установить значение</span>
<span class="k">print</span> <span class="n">user</span><span class="p">[</span><span class="s">&#39;level&#39;</span><span class="p">]</span>
<span class="n">user</span><span class="p">[</span><span class="s">&#39;level&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">7</span>

<span class="c"># Сохранить документ</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>

<span class="c"># Удалить документ</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">remove</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>

<span class="c"># Установить значение в документе</span>
<span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">update</span><span class="p">({</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="s">&#39;user 2&#39;</span> <span class="p">},</span> <span class="p">{</span> <span class="s">&quot;$set&quot;</span><span class="p">:</span> <span class="p">{</span> <span class="s">&#39;level&#39;</span><span class="p">:</span><span class="mi">5</span> <span class="p">}</span> <span class="p">})</span>

<span class="c"># Кол-во документов</span>
<span class="k">print</span> <span class="s">&#39;Count&#39;</span><span class="p">,</span><span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>
<span class="k">print</span> <span class="s">&#39;Count lvl=2&#39;</span><span class="p">,</span><span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">&#39;level&#39;</span><span class="p">:</span><span class="mi">2</span><span class="p">})</span><span class="o">.</span><span class="n">count</span><span class="p">()</span>

<span class="c"># Сортировка</span>
<span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">()</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span><span class="s">&#39;level&#39;</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">user</span>
<span class="c"># в обратном порядке: .sort(&#39;level&#39;,pymongo.DESCENDING)</span>
<span class="c"># Сортировка по нескольким атрибутам</span>
    <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">({})</span><span class="o">.</span><span class="n">sort</span><span class="p">(</span> <span class="p">[(</span><span class="s">&#39;status&#39;</span><span class="p">,</span><span class="mi">1</span><span class="p">),(</span><span class="s">&#39;level&#39;</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)]</span> <span class="p">)</span>

<span class="c"># Ограничение выборки, пропустить один документ и выбрать не более двух</span>
<span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">()</span><span class="o">.</span><span class="n">skip</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">.</span><span class="n">limit</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">user</span>

<span class="c"># Условия</span>
<span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">()</span><span class="o">.</span><span class="n">where</span><span class="p">(</span><span class="s">&#39;this.name == &quot;user 2&quot; || this.level&gt;3&#39;</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">user</span>

<span class="c"># Выбрать неповторяющиеся записи</span>
<span class="k">for</span> <span class="n">user</span> <span class="ow">in</span> <span class="n">db</span><span class="o">.</span><span class="n">users</span><span class="o">.</span><span class="n">distinct</span><span class="p">(</span><span class="s">&#39;level&#39;</span><span class="p">):</span>
    <span class="k">print</span> <span class="n">user</span>

<span class="c"># Поиск регулярным выражением</span>
<span class="kn">import</span> <span class="nn">re</span>
<span class="n">regex</span> <span class="o">=</span> <span class="n">re</span><span class="o">.</span><span class="n">compile</span><span class="p">(</span><span class="s">&#39;^us&#39;</span><span class="p">,</span> <span class="n">re</span><span class="o">.</span><span class="n">I</span> <span class="o">|</span> <span class="n">re</span><span class="o">.</span><span class="n">U</span><span class="p">)</span> 
<span class="n">result</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">collection</span><span class="o">.</span><span class="n">find</span><span class="p">({</span> <span class="s">&#39;name&#39;</span><span class="p">:</span><span class="n">regex</span> <span class="p">})</span>
</pre></div>
</div>