::id 508f6ebbbbddbd5e1d000000
::date 2012-10-30
::title Python кодировки, подмена stdout
::tags python, кодировки
::body
Иногда в программах появляются проблемы с кодировками, чаще всего это связано с выводом unicode, и вы можете получить ошибку наподобие //"UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-7: ordinal not in range(128)"//. Одно из решений - подменить stdout.
Ниже пример подмены stdout.

[[# coding: utf8

import sys

class StdOutWrapper(object):
    def __init__(self, active=True):
        self.active = active
        self.std = sys.stdout
        sys.stdout = self
    def write(self, *args):
        if not self.active:
            return
        for i in args:
            if isinstance(i, unicode): i = i.encode('utf8')
            elif not isinstance(i, str): i = repr(i).encode('utf8')
            self.std.write(i)
    def flush(self):
        if not self.active:
            return
        self.std.flush()

def main():
    StdOutWrapper()
    print 'test latin'
    print 'Проверка кириллицы, utf8!!!'
    print u'test latin'
    print u'Проверка кириллицы, unicode!!!'
    print ['Про', u'верка!']

if __name__ == '__main__':
    main()
]]

::html
Иногда в программах появляются проблемы с кодировками, чаще всего это связано с выводом unicode, и вы можете получить ошибку наподобие <i>"UnicodeEncodeError: 'ascii' codec can't encode characters in position 0-7: ordinal not in range(128)"</i>. Одно из решений - подменить stdout.<br />
Ниже пример подмены stdout.<br />
<br />
<div class="codebox"><div class="highlight"><pre><span class="c"># coding: utf8</span>

<span class="kn">import</span> <span class="nn">sys</span>

<span class="k">class</span> <span class="nc">StdOutWrapper</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">active</span><span class="o">=</span><span class="bp">True</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">active</span> <span class="o">=</span> <span class="n">active</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">std</span> <span class="o">=</span> <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span>
        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span> <span class="o">=</span> <span class="bp">self</span>
    <span class="k">def</span> <span class="nf">write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="o">*</span><span class="n">args</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">active</span><span class="p">:</span>
            <span class="k">return</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">args</span><span class="p">:</span>
            <span class="k">if</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="nb">unicode</span><span class="p">):</span> <span class="n">i</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf8&#39;</span><span class="p">)</span>
            <span class="k">elif</span> <span class="ow">not</span> <span class="nb">isinstance</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="nb">str</span><span class="p">):</span> <span class="n">i</span> <span class="o">=</span> <span class="nb">repr</span><span class="p">(</span><span class="n">i</span><span class="p">)</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s">&#39;utf8&#39;</span><span class="p">)</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">std</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">flush</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">active</span><span class="p">:</span>
            <span class="k">return</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">std</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="n">StdOutWrapper</span><span class="p">()</span>
    <span class="k">print</span> <span class="s">&#39;test latin&#39;</span>
    <span class="k">print</span> <span class="s">&#39;Проверка кириллицы, utf8!!!&#39;</span>
    <span class="k">print</span> <span class="s">u&#39;test latin&#39;</span>
    <span class="k">print</span> <span class="s">u&#39;Проверка кириллицы, unicode!!!&#39;</span>
    <span class="k">print</span> <span class="p">[</span><span class="s">&#39;Про&#39;</span><span class="p">,</span> <span class="s">u&#39;верка!&#39;</span><span class="p">]</span>

<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">&#39;__main__&#39;</span><span class="p">:</span>
    <span class="n">main</span><span class="p">()</span>
</pre></div>
</div><br />
